[{"/Users/sanshitsagar/portfolio/fragments-ui/src/index.js":"1","/Users/sanshitsagar/portfolio/fragments-ui/src/App.js":"2","/Users/sanshitsagar/portfolio/fragments-ui/src/config.js":"3","/Users/sanshitsagar/portfolio/fragments-ui/src/reportWebVitals.js":"4","/Users/sanshitsagar/portfolio/fragments-ui/src/libs/errorLib.js":"5","/Users/sanshitsagar/portfolio/fragments-ui/src/Routes.js":"6","/Users/sanshitsagar/portfolio/fragments-ui/src/libs/contextLib.js":"7","/Users/sanshitsagar/portfolio/fragments-ui/src/components/ErrorBoundary.js":"8","/Users/sanshitsagar/portfolio/fragments-ui/src/components/UnauthenticatedRoute.js":"9","/Users/sanshitsagar/portfolio/fragments-ui/src/components/AuthenticatedRoute.js":"10","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Home.js":"11","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Login.js":"12","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Signup.js":"13","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ResetPassword.js":"14","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ChangePassword.js":"15","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Themes.js":"16","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Dashboard.js":"17","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/NewNote.js":"18","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Notes.js":"19","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Settings.js":"20","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ChangeEmail.js":"21","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/NotFound.js":"22","/Users/sanshitsagar/portfolio/fragments-ui/src/components/LoaderButton.js":"23","/Users/sanshitsagar/portfolio/fragments-ui/src/libs/hooksLib.js":"24","/Users/sanshitsagar/portfolio/fragments-ui/src/libs/awsLib.js":"25","/Users/sanshitsagar/portfolio/fragments-ui/src/components/FacebookButton.js":"26","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/VirtualizedHighlighter.js":"27"},{"size":1249,"mtime":1613724912000,"results":"28","hashOfConfig":"29"},{"size":3751,"mtime":1614602072566,"results":"30","hashOfConfig":"29"},{"size":1149,"mtime":1613724912000,"results":"31","hashOfConfig":"29"},{"size":362,"mtime":1613724912000,"results":"32","hashOfConfig":"29"},{"size":1213,"mtime":1613724912000,"results":"33","hashOfConfig":"29"},{"size":2240,"mtime":1613724912000,"results":"34","hashOfConfig":"29"},{"size":170,"mtime":1613724912000,"results":"35","hashOfConfig":"29"},{"size":572,"mtime":1613724912000,"results":"36","hashOfConfig":"29"},{"size":889,"mtime":1613724912000,"results":"37","hashOfConfig":"29"},{"size":508,"mtime":1613724912000,"results":"38","hashOfConfig":"29"},{"size":3401,"mtime":1614605176039,"results":"39","hashOfConfig":"29"},{"size":2864,"mtime":1613724912000,"results":"40","hashOfConfig":"29"},{"size":4678,"mtime":1613724912000,"results":"41","hashOfConfig":"29"},{"size":4084,"mtime":1613724912000,"results":"42","hashOfConfig":"29"},{"size":2381,"mtime":1613724912000,"results":"43","hashOfConfig":"29"},{"size":679,"mtime":1613724912000,"results":"44","hashOfConfig":"29"},{"size":2554,"mtime":1613724912000,"results":"45","hashOfConfig":"29"},{"size":19187,"mtime":1614602782426,"results":"46","hashOfConfig":"29"},{"size":16054,"mtime":1614518054257,"results":"47","hashOfConfig":"29"},{"size":1177,"mtime":1614585088329,"results":"48","hashOfConfig":"29"},{"size":2997,"mtime":1613724912000,"results":"49","hashOfConfig":"29"},{"size":219,"mtime":1613724912000,"results":"50","hashOfConfig":"29"},{"size":546,"mtime":1613724912000,"results":"51","hashOfConfig":"29"},{"size":325,"mtime":1613724912000,"results":"52","hashOfConfig":"29"},{"size":258,"mtime":1613724912000,"results":"53","hashOfConfig":"29"},{"size":1848,"mtime":1613724912000,"results":"54","hashOfConfig":"29"},{"size":3973,"mtime":1614583942943,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1iu22qz",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/sanshitsagar/portfolio/fragments-ui/src/index.js",[],["115","116"],"/Users/sanshitsagar/portfolio/fragments-ui/src/App.js",["117"],"/Users/sanshitsagar/portfolio/fragments-ui/src/config.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/reportWebVitals.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/libs/errorLib.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/Routes.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/libs/contextLib.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/ErrorBoundary.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/UnauthenticatedRoute.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/AuthenticatedRoute.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Home.js",["118"],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Login.js",["119","120"],"import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\n\nimport Form from \"react-bootstrap/Form\";\n//import { useHistory } from \"react-router-dom\";\nimport FacebookButton from \"../components/FacebookButton\"; \n\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\n\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\"; \n\nexport default function Login() {\n    //const history = useHistory();\n    const { userHasAuthenticated } = useAppContext(); \n    const [isLoading, setIsLoading] = useState(false); \n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\"\n    });\n\n    function validateForm() {\n        return fields.email.length > 0 && fields.password.length > 0;\n    }\n\n    function handleFbLogin() {\n        userHasAuthenticated(true);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setIsLoading(true);\n        try {\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n            //history.push(\"/\"); \n        } catch (e) {\n                onError(e);\n                setIsLoading(false); \n            }\n        }\n\n        return (\n            \n                <div className=\"Login\">\n                    <Form onSubmit={handleSubmit}>\n\n                    <hr />\n                    <Form.Group size=\"lg\" controlId=\"email\">\n                    <Form.Label>\n                        <h5> Email </h5>\n                    </Form.Label> \n                        <Form.Control\n                            autoFocus\n                            type=\"email\"\n                            value={fields.email}\n                            onChange={handleFieldChange}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"password\">\n                        <Form.Label>\n                            <h5> Password </h5>    \n                        </Form.Label> \n                        <Form.Control\n                            type=\"password\"\n                            value={fields.password}\n                            onChange={handleFieldChange}\n                        />\n                    </Form.Group> \n                    <Link to=\"/login/reset\">\n                        <h5> Forgot password? </h5> </Link>\n                    <LoaderButton\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        isLoading={isLoading}\n                        disabled={!validateForm()}\n                    >\n                        Login \n                    </LoaderButton>\n                </Form>\n            </div>\n          \n    );\n}","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Signup.js",["121"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { Auth } from \"aws-amplify\";\nimport \"./Signup.css\";\nimport FacebookButton from \"../components/FacebookButton\"; \n\nexport default function Signup() {\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\", \n        confirmPassword: \"\", \n        confirmationCode: \"\",\n    });\n    \n    const history = useHistory();\n    const [newUser, setNewUser] = useState(null); \n    const { userHasAuthenticated } = useAppContext(); \n    const [isLoading, setIsLoading] = useState(false);\n    \n    function validateForm() { \n        return (\n            fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword\n        ); \n    }\n    \n    function validateConfirmationForm() {\n        return fields.confirmationCode.length > 0;\n    }\n    \n    async function handleSubmit(event) { \n        event.preventDefault();\n        setIsLoading(true);\n\n        try {\n            const newUser = await Auth.signUp({\n                username: fields.email,\n                password: fields.password, \n            });\n            setIsLoading(false);\n            setNewUser(newUser); \n        } catch (e) {\n            onError(e);\n            setIsLoading(false); \n        }\n    }\n    \n    async function handleConfirmationSubmit(event) {\n        event.preventDefault();\n        setIsLoading(true);\n        \n        try {\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n            history.push(\"/\"); \n        } catch (e) {\n            onError(e);\n            setIsLoading(false); \n        }\n    }\n    \n    function renderConfirmationForm() { \n        return (\n            <Form onSubmit={handleConfirmationSubmit}> \n                <Form.Group controlId=\"confirmationCode\" size=\"lg\">\n                <Form.Label>Confirmation Code</Form.Label>\n                <Form.Control\n                    autoFocus\n                    type=\"tel\"\n                    onChange={handleFieldChange}\n                    value={fields.confirmationCode}\n                />\n                <Form.Text muted>Please check your email for the code.</Form.Text>\n            </Form.Group>\n            <LoaderButton\n                block\n                size=\"lg\"\n                type=\"submit\"\n                variant=\"success\" isLoading={isLoading} disabled={!validateConfirmationForm()}\n            >\n                Verify\n            </LoaderButton>\n        </Form> );\n    }\n\n    function renderForm() { \n        return (\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" size=\"lg\">\n                  \n                    <hr />\n                    <Form.Label>\n                        <h5> Email</h5>\n                    </Form.Label> \n                    <Form.Control\n                        autoFocus\n                        type=\"email\" \n                        value={fields.email}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\" size=\"lg\">\n                    <Form.Label>\n                        <h5> Password </h5>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={fields.password}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n                <Form.Label>\n                    <h5> Confirm Password </h5>\n                </Form.Label> \n                <Form.Control\n                    type=\"password\"\n                    onChange={handleFieldChange}\n                    value={fields.confirmPassword}\n                />\n            </Form.Group>\n            <LoaderButton\n                block\n                size=\"lg\"\n                type=\"submit\"\n                variant=\"success\"\n                isLoading={isLoading}\n                disabled={!validateForm()}\n            >\n                Signup\n            </LoaderButton>\n        </Form> \n        );\n    }\n\n    return (\n        <div className=\"Signup\">\n            {newUser === null ? renderForm() : renderConfirmationForm()}\n        </div>\n    );\n}","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ResetPassword.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ChangePassword.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Themes.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Dashboard.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/NewNote.js",["122","123","124","125","126","127","128","129","130","131"],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Notes.js",["132","133","134","135","136","137","138"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { s3Upload } from \"../libs/awsLib\"; \nimport LoaderButton from \"../components/LoaderButton\"; \nimport config from \"../config\"; \nimport \"./Notes.css\"; \n\nimport Form from \"react-bootstrap/Form\"; \nimport {  \n  dark, ocean, atelierCaveLight, atelierCaveDark, stackoverflowDark,\n  atomOneLight,brownPaper,github,shadesOfPurple,rainbow, googlecode,\n  monoBlue, nightOwl, grayscale,purebasic, monokaiSublime, \n  tomorrowNightBlue, tomorrowNightBright, tomorrowNightEighties,\n} from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nimport { Button } from \"react-bootstrap\"; \n\nimport { \n    Paper, \n    Grid, \n    Select, \n    InputLabel, \n    MenuItem, \n    FormControl, \n    TextField,\n    Divider\n   } from \"@material-ui/core\"; \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FaceIcon from \"@material-ui/icons/Face\"; \nimport Filter1 from \"@material-ui/icons/Filter1\"; \nimport Filter2 from \"@material-ui/icons/Filter2\"; \n\nexport default function Notes() {\n  const file = useRef(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const [note, setNote] = useState(null);\n\n  const [content, setContent] = useState(\"\");\n  const [contentToRender, setContentToRender] = useState(\"\"); \n  const [programmingLanguage, setProgrammingLanguage] = useState(\"java\")\n\n  const [highlightedSnippetTheme, setHighlightedSnippetTheme] = useState(dark)\n  const [editorSnippetTheme, setEditorSnippetTheme] = useState(\"terminal\")\n  const [editorBackgroundColor, setEditorBackgroundColor] = useState(\"black\")\n  const [editorFontColor, setEditorFontColor] = useState(\"green\")\n  \n  const [isLoading, setIsLoading] = useState(false); \n  const [isDeleting, setIsDeleting] = useState(false); \n  \n  const [moniker, setMoniker] = useState(\"@\"); \n  const [tag1, setTag1] = useState(\"#\");\n  const [tag2, setTag2] = useState(\"#\"); \n \n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const { content, moniker, primaryTags, secondaryTags, attachment } = note;\n\n        console.log(note); \n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        handleMonikerChange(moniker);\n        handleTag1Update(primaryTags);\n        handleTag2Update(secondaryTags); \n\n        handleContentChange(content);  \n        setNote(note);\n      } catch (e) {\n        onError(e);\n      }\n    }\n    onLoad();\n  }, [id]);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n  \n  function formatFilename(str) {\n    return str.replace(/^\\w+-/, \"\");\n  }\n  \n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n  \n  function saveNote(note) {\n    return API.put(\"notes\", `/notes/${id}`, {\n      body: note\n    });\n  }\n\n  async function handleSubmit(event) {\n    let attachment;\n    event.preventDefault();\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${\n          config.MAX_ATTACHMENT_SIZE / 1000000\n        } MB.`\n      );\n      return;\n    }\n    setIsLoading(true);\n    \n    try {\n      if (file.current) {\n        attachment = await s3Upload(file.current);\n      }\n      await saveNote({\n        content,\n        moniker: moniker,\n        primaryTags: tag1, \n        secondaryTags: tag2, \n        attachment: attachment || note.attachment\n      });\n      setIsLoading(false); \n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n  \n  function deleteNote() {\n    return API.del(\"notes\", `/notes/${id}`);\n  }\n  \n  async function handleDelete(event) {\n    event.preventDefault();\n  \n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this note?\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    setIsDeleting(true);\n    try {\n      await deleteNote();\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsDeleting(false);\n    }\n  }\n\n  function handleLanguageSelectorChange(updatedLanguage) {\n    setProgrammingLanguage(updatedLanguage); \n  }\n\n  function LanguageSelector() {\n    return (\n      <div className = \"languageSelectorClass\"> \n        <FormControl style = {{ minWidth: \"330px\", margin:\"12.5px\" }}> \n          <InputLabel htmlFor=\"grouped-native-select\">Programming Language</InputLabel>\n\n          <Select \n            labelId=\"label\" \n            id=\"select\" \n            value={programmingLanguage} \n            onChange={(e) => \n              handleLanguageSelectorChange(e.target.value)\n            }\n          > \n            <MenuItem value=\"javascript\"> JavaScript </MenuItem>\n            <MenuItem value=\"html\"> HTML </MenuItem>\n            <MenuItem value=\"c++\"> C++ </MenuItem>\n            <MenuItem value=\"java\"> Java </MenuItem>\n\n          </Select>\n        </FormControl>\n      </div>\n    ); \n  }\n\n  function handleViewerThemeChange(updatedViewerTheme) {\n    setHighlightedSnippetTheme(updatedViewerTheme); \n  }\n\n  function ViewerThemeSelector() {\n    return (\n      <div className = \"viewerThemeSelectorClass\"> \n        <FormControl style = {{ minWidth: \"330px\", margin:\"12.5px\" }}> \n          <InputLabel htmlFor=\"grouped-native-select\">Viewer Theme</InputLabel>\n          \n          <Select \n            labelId=\"label\" \n            id=\"selectViewerTheme\"\n            value={highlightedSnippetTheme} \n            onChange={(e) => \n              handleViewerThemeChange(e.target.value)\n            }\n          > \n\n            <MenuItem value={shadesOfPurple}> Shades Of Purple </MenuItem>\n            <MenuItem value={dark}> Dark </MenuItem>\n            <MenuItem value={github}> GitHub </MenuItem>\n            <MenuItem value={ocean}> Ocean </MenuItem>\n            <MenuItem value={atomOneLight}> Atom 1 Light </MenuItem>\n            <MenuItem value={brownPaper}> Brown Paper </MenuItem>\n            <MenuItem value={rainbow}> Rainbow </MenuItem>\n            <MenuItem value={googlecode}> GoogleCode </MenuItem>\n            <MenuItem value={monoBlue}> MonoBlue </MenuItem>\n            <MenuItem value={nightOwl}> NightOwl </MenuItem>\n            <MenuItem value={grayscale}> Grayscale </MenuItem>\n            <MenuItem value={stackoverflowDark}> StackOverflow Dark </MenuItem>\n            <MenuItem value={monokaiSublime}> Monokai Sublime </MenuItem>\n            <MenuItem value={purebasic}> Pure Basic </MenuItem> \n            <MenuItem value={tomorrowNightBlue}> Tomorrow Night Blue </MenuItem> \n            <MenuItem value={tomorrowNightBright}> Tomorrow Night Bright </MenuItem> \n            <MenuItem value={tomorrowNightEighties}> Tomorrow Night Eighties </MenuItem> atelierCaveLight\n            <MenuItem value={atelierCaveLight}> Atelier Cave Light </MenuItem> \n            <MenuItem value={atelierCaveDark}> Atelier Cave Dark </MenuItem> \n          </Select>\n        </FormControl>\n      </div> \n    )\n  }\n\n  function handleEditorThemeChange(updatedEditorTheme) {\n    setEditorSnippetTheme(updatedEditorTheme); \n\n    if(updatedEditorTheme == \"terminal\") {\n        setEditorBackgroundColor(\"black\");\n        setEditorFontColor(\"green\"); \n    } else {\n        setEditorBackgroundColor(\"white\");\n        setEditorFontColor(\"black\"); \n    }\n  }\n\n  function EditorThemeSelector() {\n    return (\n      <div className = \"editorThemeSelectorClass\"> \n        <FormControl style = {{ minWidth: \"330px\", margin:\"12.5px\", \n                                backgroundColor: \"#ffffff\", \n                                borderWidth:\"5px\", borderColor:\"red\" \n                              }}> \n                              \n          <InputLabel htmlFor=\"grouped-native-select\">Editor Theme</InputLabel>\n          <Select labelId=\"label\" id=\"selectEditorTheme\"\n                  value={editorSnippetTheme} \n                  onChange={(e) => handleEditorThemeChange(e.target.value)}> \n\n            <MenuItem value=\"terminal\"> Terminal </MenuItem>\n            <MenuItem value=\"classic\"> Classic </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n\n  function ButtonGroup() {\n    return (\n      <div className=\"ButtonGroup\" style={{ width: \"90%\", margin: \"20px\"}}>\n        <LoaderButton block size=\"sm\" type=\"submit\" value=\"submit\" \n                      isLoading={isLoading} disabled={!validateForm()}\n                      style={{ backgroundColor:\"white\", color: \"black\", borderWidth: \"2.5px\", borderColor: \"#202020\" }}>\n          Save\n        </LoaderButton>\n        \n        <LoaderButton variant=\"dark\" block size=\"sm\" onClick={handleDelete} isLoading={isDeleting}>\n          Delete\n        </LoaderButton>\n      </div>\n    );\n  }\n\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  const classes = useStyles();\n  \n  function handleMonikerChange(updatedMoniker) {\n    if(updatedMoniker) {\n      if(updatedMoniker.length == 0) {\n        updatedMoniker = \"#\"; \n      } else if(updatedMoniker.substring(0,1) != \"@\") {\n        updatedMoniker = \"#\" + updatedMoniker;\n      }\n      setMoniker(updatedMoniker);\n    } else {\n      setMoniker(\"@\"); \n    }\n  }\n\n  function handleTag1Update(updatedTag1) {\n      if(updatedTag1) {\n        if(updatedTag1.length == 0) {\n          updatedTag1 = \"#\"; \n        } else if (updatedTag1.substring(0,1) != \"#\") {\n          updatedTag1 = \"#\" + updatedTag1; \n        }\n        setTag1(updatedTag1); \n      } else {\n        setTag1(\"#\"); \n      }\n      \n  }\n\n  function handleTag2Update(updatedTag2) {\n    if(updatedTag2) {\n      if(updatedTag2.length == 0) {\n        updatedTag2 = \"#\";\n      } else if(updatedTag2.substring(0,1) != \"#\") {\n          updatedTag2 = \"#\" + updatedTag2; \n      }\n      setTag2(updatedTag2); \n    } else {\n      setTag2(\"#\"); \n    }\n  }\n\n  \n\n  function handleContentChange(updatedContent) {\n    const lines = (updatedContent.match(/\\n/g) || '').length + 1\n\n    if(lines <= 23) {\n      //set a limit to the number of chars if typing on the 30th line \n      //if copying and pasting from 28 lines to 35, clip the first two lines \n      //and only append those \n      \n      setContent(updatedContent);\n\n      let snippetFillerForSyntaxHighlighter = \"\"; \n      let emptyLine = \"                              \\n\"; \n      \n      let i; \n      for(i = 0; i < 31 - lines; i++) {\n        snippetFillerForSyntaxHighlighter += emptyLine; \n      } \n\n      setContentToRender(updatedContent + snippetFillerForSyntaxHighlighter); \n    }\n  }\n\n\n  return (\n  <div className=\"mainContainer\" style={{ backgroundColor: '#FFFFFFF'}}> \n    { note  && (\n    \n     <Form onSubmit={handleSubmit}>\n        <Grid container spacing={1} style = {{ flexGrow: 1, backgroundColor: '#FFFFFF' }}> \n          <Grid item lg={6}> \n          \n            <Paper rounded={true} elevation={20} style={{ height: '59.5vh', width: '100%' }}> \n              \n              <Form.Group controlId=\"content\">\n                <Form.Control as=\"textarea\" value={content} custom=\"true\" \n                              onChange={(e) => handleContentChange(e.target.value)} \n                              style={{ minHeight:'59.5vh', maxHeight:'59.5vh',  width: '100%', resize: 'none', padding: '5px', \n                                        backgroundColor: editorBackgroundColor, color: editorFontColor, fontSize:'13px',  borderWidth: '1px' }}              \n                />\n              </Form.Group>   \n            </Paper>\n          \n          </Grid>\n\n          <Grid item lg={6} style = {{ flexGrow: 1, backgroundColor: '#FFFFFF' }}> \n            <Paper rounded={true} elevation={20} style={{ height: '59.5vh', width: '100%', padding: '5px' }}>\n              <SyntaxHighlighter \n                  language={programmingLanguage} \n                  style={ highlightedSnippetTheme } \n                  showLineNumbers \n                  wrapLongLines={false} \n              > \n                { contentToRender }\n              </SyntaxHighlighter>   \n            </Paper>\n          </Grid>      \n           \n          <Grid item lg={4} style = {{ backgroundColor: '#FFFFFF' }}>\n            <Paper style={{ minHeight: \"25vh\", maxHeight: \"25vh\", backgroundColor: \"#ffffff\"  }}>\n             \n            <div className={classes.root}>\n  \n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem autofocus>\n                    <ListItemIcon>\n                        <FaceIcon />\n                    </ListItemIcon>\n                  \n\n                    <ListItemText primary={ \n                        <TextField id=\"filled-basic\" variant=\"filled\" \n                                placeholder=\"@\" size =\"large\"\n                                value={ moniker } disabled = \"true\"\n                        /> } \n                    />\n                </ListItem>\n              </List>\n\n              <Divider />\n\n              <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                <ListItem autofocus>\n                    <ListItemIcon>\n                        <Filter1 />\n                    </ListItemIcon> \n\n                    <ListItemText primary= {\n                        <TextField id=\"filled-basic\" variant=\"outlined\" \n                                    placeholder=\"#\" size =\"medium\"\n                                    value={ tag1 } onChange={(e) => handleTag1Update(e.target.value)}\n                        /> }\n                    />\n                </ListItem>\n\n                <ListItem href=\"#simple-list\">\n                    <ListItemIcon>\n                        <Filter2 />\n                    </ListItemIcon>\n\n                    <ListItemText secondary= {\n                        <TextField id=\"filled-basic\" variant=\"outlined\" \n                                    placeholder=\"#\" size =\"medium\"\n                                    value={ tag2 } onChange={(e) => handleTag2Update(e.target.value)}                  /> }\n                  />\n                </ListItem>\n              </List>\n            </div>\n            </Paper>\n          </Grid>        \n        \n          <Grid item lg={4} style = {{ backgroundColor: '#ffffff' }}>\n            <Paper style={{ minHeight: \"25vh\", maxHeight: \"25vh\", backgroundColor: \"#ffffff\" }}>\n              <LanguageSelector />\n\n              <ViewerThemeSelector />\n            \n              <EditorThemeSelector /> \n            </Paper>\n          </Grid>       \n          \n        \n\n          <Grid item lg={4}  style = {{  backgroundColor: '#FFFFFF' }}>\n            <Paper style={{ minHeight: \"25vh\", maxHeight: \"25vh\", backgroundColor: \"#FFFFFF\" }}>\n              <FormControl style={{ display: \"flex\", flexDirection:\"row\", width: \"100%\" }}>      \n                <Button className=\"fileAttach1\" variant=\"light\" block size=\"sm\" > \n                    <input type = \"file\"  onChange={handleFileChange} /> \n                </Button>\n\n                <Button className=\"fileAttach2\" variant=\"link\" block size=\"sm\" style={{ marginBottom: \"20px\" }}> \n                  { note.attachment && (\n                      <p> <a target=\"_blank\" rel=\"noopener noreferrer\" href={note.attachmentURL}>\n                      {formatFilename(note.attachment)}\n                      </a> </p> \n                  )}\n                </Button> \n\n              </FormControl>\n              <ButtonGroup style={{ width:\"80%\" }} /> \n                \n            </Paper>\n          </Grid>       \n             \n        </Grid>\n      </Form> \n     \n    )}\n\n    </div>\n  );\n}","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Settings.js",["139","140","141","142","143","144","145","146"],"import React, { useState, useEffect } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\n\nimport VirtualizedHighlighter from './VirtualizedHighlighter'; \n\nexport default function Settings() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  return (\n    <div className=\"Settings\">\n        <LinkContainer to=\"/settings/email\">\n          <LoaderButton block bsSize=\"large\">\n            <h5> Update Email </h5> \n          </LoaderButton>\n        </LinkContainer>\n        <LinkContainer to=\"/settings/password\">\n          <LoaderButton block dark bsSize=\"large\">\n            <h5> Update Password </h5> \n          </LoaderButton>\n        </LinkContainer>\n      {/* <hr />\n     */}\n    </div>\n  );\n}\n\n// export default function Settings() {\n\n//   return (\n\n//     <VirtualizedHighlighter /> \n\n//   );\n// }","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ChangeEmail.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/NotFound.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/LoaderButton.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/libs/hooksLib.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/libs/awsLib.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/FacebookButton.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/VirtualizedHighlighter.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":66,"column":17,"nodeType":"157","endLine":66,"endColumn":20},{"ruleId":"151","severity":1,"message":"158","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":22},{"ruleId":"151","severity":1,"message":"159","line":29,"column":14,"nodeType":"153","messageId":"154","endLine":29,"endColumn":27},{"ruleId":"151","severity":1,"message":"158","line":10,"column":8,"nodeType":"153","messageId":"154","endLine":10,"endColumn":22},{"ruleId":"151","severity":1,"message":"160","line":25,"column":5,"nodeType":"153","messageId":"154","endLine":25,"endColumn":10},{"ruleId":"151","severity":1,"message":"161","line":46,"column":8,"nodeType":"153","messageId":"154","endLine":46,"endColumn":26},{"ruleId":"151","severity":1,"message":"162","line":64,"column":12,"nodeType":"153","messageId":"154","endLine":64,"endColumn":26},{"ruleId":"151","severity":1,"message":"163","line":80,"column":12,"nodeType":"153","messageId":"154","endLine":80,"endColumn":23},{"ruleId":"151","severity":1,"message":"164","line":80,"column":25,"nodeType":"153","messageId":"154","endLine":80,"endColumn":39},{"ruleId":"151","severity":1,"message":"165","line":82,"column":11,"nodeType":"153","messageId":"154","endLine":82,"endColumn":18},{"ruleId":"151","severity":1,"message":"166","line":93,"column":14,"nodeType":"153","messageId":"154","endLine":93,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":98,"column":42,"nodeType":"169","messageId":"170","endLine":98,"endColumn":44},{"ruleId":"167","severity":1,"message":"168","line":105,"column":50,"nodeType":"169","messageId":"170","endLine":105,"endColumn":52},{"ruleId":"167","severity":1,"message":"168","line":112,"column":52,"nodeType":"169","messageId":"170","endLine":112,"endColumn":54},{"ruleId":"167","severity":1,"message":"171","line":242,"column":27,"nodeType":"169","messageId":"170","endLine":242,"endColumn":29},{"ruleId":"167","severity":1,"message":"171","line":300,"column":32,"nodeType":"169","messageId":"170","endLine":300,"endColumn":34},{"ruleId":"167","severity":1,"message":"168","line":302,"column":47,"nodeType":"169","messageId":"170","endLine":302,"endColumn":49},{"ruleId":"167","severity":1,"message":"171","line":313,"column":31,"nodeType":"169","messageId":"170","endLine":313,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":315,"column":47,"nodeType":"169","messageId":"170","endLine":315,"endColumn":49},{"ruleId":"167","severity":1,"message":"171","line":327,"column":29,"nodeType":"169","messageId":"170","endLine":327,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":329,"column":44,"nodeType":"169","messageId":"170","endLine":329,"endColumn":46},{"ruleId":"151","severity":1,"message":"172","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"173","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":14},{"ruleId":"151","severity":1,"message":"174","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":30},{"ruleId":"151","severity":1,"message":"175","line":12,"column":9,"nodeType":"153","messageId":"154","endLine":12,"endColumn":16},{"ruleId":"151","severity":1,"message":"176","line":13,"column":10,"nodeType":"153","messageId":"154","endLine":13,"endColumn":19},{"ruleId":"151","severity":1,"message":"177","line":13,"column":21,"nodeType":"153","messageId":"154","endLine":13,"endColumn":33},{"ruleId":"151","severity":1,"message":"178","line":15,"column":12,"nodeType":"153","messageId":"154","endLine":15,"endColumn":20},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FacebookButton' is defined but never used.","'handleFbLogin' is defined but never used.","'Paper' is defined but never used.","'LoyaltyTwoToneIcon' is defined but never used.","'attachmentName' is assigned a value but never used.","'editorTheme' is assigned a value but never used.","'setEditorTheme' is assigned a value but never used.","'classes' is assigned a value but never used.","'formatFilename' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'onError' is defined but never used.","'VirtualizedHighlighter' is defined but never used.","'history' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'billUser' is defined but never used.","no-global-assign","no-unsafe-negation"]