[{"/Users/sanshitsagar/portfolio/fragments-ui/src/index.js":"1","/Users/sanshitsagar/portfolio/fragments-ui/src/App.js":"2","/Users/sanshitsagar/portfolio/fragments-ui/src/config.js":"3","/Users/sanshitsagar/portfolio/fragments-ui/src/reportWebVitals.js":"4","/Users/sanshitsagar/portfolio/fragments-ui/src/libs/errorLib.js":"5","/Users/sanshitsagar/portfolio/fragments-ui/src/Routes.js":"6","/Users/sanshitsagar/portfolio/fragments-ui/src/libs/contextLib.js":"7","/Users/sanshitsagar/portfolio/fragments-ui/src/components/ErrorBoundary.js":"8","/Users/sanshitsagar/portfolio/fragments-ui/src/components/UnauthenticatedRoute.js":"9","/Users/sanshitsagar/portfolio/fragments-ui/src/components/AuthenticatedRoute.js":"10","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Home.js":"11","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Login.js":"12","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Signup.js":"13","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ResetPassword.js":"14","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ChangePassword.js":"15","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Themes.js":"16","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Dashboard.js":"17","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/NewNote.js":"18","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Notes.js":"19","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Settings.js":"20","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ChangeEmail.js":"21","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/NotFound.js":"22","/Users/sanshitsagar/portfolio/fragments-ui/src/components/LoaderButton.js":"23","/Users/sanshitsagar/portfolio/fragments-ui/src/libs/hooksLib.js":"24","/Users/sanshitsagar/portfolio/fragments-ui/src/libs/awsLib.js":"25","/Users/sanshitsagar/portfolio/fragments-ui/src/components/FacebookButton.js":"26","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/VirtualizedHighlighter.js":"27","/Users/sanshitsagar/portfolio/fragments-ui/src/styles/hljs.js":"28"},{"size":1249,"mtime":1613724912000,"results":"29","hashOfConfig":"30"},{"size":4140,"mtime":1614975541202,"results":"31","hashOfConfig":"30"},{"size":1149,"mtime":1613724912000,"results":"32","hashOfConfig":"30"},{"size":362,"mtime":1613724912000,"results":"33","hashOfConfig":"30"},{"size":1213,"mtime":1613724912000,"results":"34","hashOfConfig":"30"},{"size":2240,"mtime":1613724912000,"results":"35","hashOfConfig":"30"},{"size":170,"mtime":1613724912000,"results":"36","hashOfConfig":"30"},{"size":572,"mtime":1613724912000,"results":"37","hashOfConfig":"30"},{"size":889,"mtime":1613724912000,"results":"38","hashOfConfig":"30"},{"size":508,"mtime":1613724912000,"results":"39","hashOfConfig":"30"},{"size":6677,"mtime":1615563257156,"results":"40","hashOfConfig":"30"},{"size":2872,"mtime":1614964216639,"results":"41","hashOfConfig":"30"},{"size":4686,"mtime":1614964239108,"results":"42","hashOfConfig":"30"},{"size":4084,"mtime":1614973204385,"results":"43","hashOfConfig":"30"},{"size":2381,"mtime":1613724912000,"results":"44","hashOfConfig":"30"},{"size":679,"mtime":1613724912000,"results":"45","hashOfConfig":"30"},{"size":2554,"mtime":1613724912000,"results":"46","hashOfConfig":"30"},{"size":20610,"mtime":1615559645131,"results":"47","hashOfConfig":"30"},{"size":16054,"mtime":1614518054257,"results":"48","hashOfConfig":"30"},{"size":1528,"mtime":1614974286234,"results":"49","hashOfConfig":"30"},{"size":2997,"mtime":1613724912000,"results":"50","hashOfConfig":"30"},{"size":219,"mtime":1613724912000,"results":"51","hashOfConfig":"30"},{"size":546,"mtime":1613724912000,"results":"52","hashOfConfig":"30"},{"size":325,"mtime":1613724912000,"results":"53","hashOfConfig":"30"},{"size":258,"mtime":1613724912000,"results":"54","hashOfConfig":"30"},{"size":1848,"mtime":1613724912000,"results":"55","hashOfConfig":"30"},{"size":3973,"mtime":1614583942943,"results":"56","hashOfConfig":"30"},{"size":1984,"mtime":1614967913462,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1iu22qz",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},"/Users/sanshitsagar/portfolio/fragments-ui/src/index.js",[],["122","123"],"/Users/sanshitsagar/portfolio/fragments-ui/src/App.js",["124"],"import React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\"; \nimport Nav from \"react-bootstrap/Nav\"; \n\nimport \"./App.css\";\nimport config from \"./config\"; \nimport Routes from \"./Routes\"; \n\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { Auth } from \"aws-amplify\";\nimport { onError } from \"./libs/errorLib\";\nimport { Button } from \"react-bootstrap\"; \n\nimport ErrorBoundary from \"./components/ErrorBoundary\"; \nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\"; \n\nimport ListAltRoundedIcon from '@material-ui/icons/ListAltRounded';\nimport PowerSettingsNewRoundedIcon from '@material-ui/icons/PowerSettingsNewRounded';\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\n\nexport default function App() { \n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n  }\n\n  useEffect(() => { \n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true); }\n    catch(e) {\n      if (e !== 'No current user') {\n        onError(e); \n      }\n    }\n    setIsAuthenticating(false); \n  }\n\n  return (\n    !isAuthenticating && (\n      <ScopedCssBaseline> \n      <div className=\"App container py-3\">\n        <Navbar collapseOnSelect bg=\"light\" variant=\"light\" expand=\"md\" className=\"mb-3\">\n          <LinkContainer to=\"/dashboard\">\n            <Navbar.Brand>\n              <div className=\"Logo\"> \n                / frag / ments / \n              </div>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav activeKey={window.location.pathname}>\n              {isAuthenticated ? (\n                <>\n                  <LinkContainer to=\"/notes/new\">\n                    <Nav.Link> \n                      <Button size=\"small\" variant=\"outline-dark\" > \n                        <FiberNewIcon style={{ color: \"#4b00b6\" }} />    \n                      </Button>\n                    </Nav.Link>\n                  </LinkContainer>\n\n                   <LinkContainer to=\"/\">\n                    <Nav.Link>\n                      <Button variant=\"outline-dark\"> \n                        <ListAltRoundedIcon size=\"48px\" /> \n                      </Button> \n                    </Nav.Link>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/settings\">\n                    <Nav.Link> \n                      <Button variant=\"outline-dark\"> \n                          <SettingsRoundedIcon />    \n                      </Button>\n                    </Nav.Link>\n                  </LinkContainer>\n\n                  <div className=\"Logout\"> \n                    <Nav.Link onClick={handleLogout}>\n                      <Button variant=\"outline-danger\"> \n                        <PowerSettingsNewRoundedIcon />\n                      </Button> \n                    </Nav.Link>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <Nav.Link>\n                      <Button variant=\"light\"> \n                        SignUp\n                      </Button> \n                    </Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <Nav.Link>\n                      <Button variant=\"light\"> \n                        Login\n                      </Button> \n                    </Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <ErrorBoundary>\n          <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n            <Routes />\n          </AppContext.Provider>\n        </ErrorBoundary>\n      </div>\n      </ScopedCssBaseline> \n    )\n  );\n}\n","/Users/sanshitsagar/portfolio/fragments-ui/src/config.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/reportWebVitals.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/libs/errorLib.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/Routes.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/libs/contextLib.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/ErrorBoundary.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/UnauthenticatedRoute.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/AuthenticatedRoute.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Home.js",["125","126","127"],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Login.js",["128","129"],"import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\n\nimport Form from \"react-bootstrap/Form\";\n//import { useHistory } from \"react-router-dom\";\nimport FacebookButton from \"../components/FacebookButton\"; \n\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\n\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\"; \n\nexport default function Login() {\n    //const history = useHistory();\n    const { userHasAuthenticated } = useAppContext(); \n    const [isLoading, setIsLoading] = useState(false); \n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\"\n    });\n\n    function validateForm() {\n        return fields.email.length > 0 && fields.password.length > 0;\n    }\n\n    function handleFbLogin() {\n        userHasAuthenticated(true);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setIsLoading(true);\n        try {\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n            //history.push(\"/\"); \n        } catch (e) {\n                onError(e);\n                setIsLoading(false); \n            }\n        }\n\n        return (\n            \n                <div className=\"Login\">\n                    <Form onSubmit={handleSubmit}>\n\n                    {/* <hr /> */}\n                    <Form.Group size=\"lg\" controlId=\"email\">\n                    <Form.Label>\n                        <h5> Email </h5>\n                    </Form.Label> \n                        <Form.Control\n                            autoFocus\n                            type=\"email\"\n                            value={fields.email}\n                            onChange={handleFieldChange}\n                        />\n                    </Form.Group>\n                    <Form.Group size=\"lg\" controlId=\"password\">\n                        <Form.Label>\n                            <h5> Password </h5>    \n                        </Form.Label> \n                        <Form.Control\n                            type=\"password\"\n                            value={fields.password}\n                            onChange={handleFieldChange}\n                        />\n                    </Form.Group> \n                    <Link to=\"/login/reset\">\n                        <h5> Forgot password? </h5> </Link>\n                    <LoaderButton\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        isLoading={isLoading}\n                        disabled={!validateForm()}\n                    >\n                        Login \n                    </LoaderButton>\n                </Form>\n            </div>\n          \n    );\n}","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Signup.js",["130"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { Auth } from \"aws-amplify\";\nimport \"./Signup.css\";\nimport FacebookButton from \"../components/FacebookButton\"; \n\nexport default function Signup() {\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\", \n        confirmPassword: \"\", \n        confirmationCode: \"\",\n    });\n    \n    const history = useHistory();\n    const [newUser, setNewUser] = useState(null); \n    const { userHasAuthenticated } = useAppContext(); \n    const [isLoading, setIsLoading] = useState(false);\n    \n    function validateForm() { \n        return (\n            fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword\n        ); \n    }\n    \n    function validateConfirmationForm() {\n        return fields.confirmationCode.length > 0;\n    }\n    \n    async function handleSubmit(event) { \n        event.preventDefault();\n        setIsLoading(true);\n\n        try {\n            const newUser = await Auth.signUp({\n                username: fields.email,\n                password: fields.password, \n            });\n            setIsLoading(false);\n            setNewUser(newUser); \n        } catch (e) {\n            onError(e);\n            setIsLoading(false); \n        }\n    }\n    \n    async function handleConfirmationSubmit(event) {\n        event.preventDefault();\n        setIsLoading(true);\n        \n        try {\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n            history.push(\"/\"); \n        } catch (e) {\n            onError(e);\n            setIsLoading(false); \n        }\n    }\n    \n    function renderConfirmationForm() { \n        return (\n            <Form onSubmit={handleConfirmationSubmit}> \n                <Form.Group controlId=\"confirmationCode\" size=\"lg\">\n                <Form.Label>Confirmation Code</Form.Label>\n                <Form.Control\n                    autoFocus\n                    type=\"tel\"\n                    onChange={handleFieldChange}\n                    value={fields.confirmationCode}\n                />\n                <Form.Text muted>Please check your email for the code.</Form.Text>\n            </Form.Group>\n            <LoaderButton\n                block\n                size=\"lg\"\n                type=\"submit\"\n                variant=\"success\" isLoading={isLoading} disabled={!validateConfirmationForm()}\n            >\n                Verify\n            </LoaderButton>\n        </Form> );\n    }\n\n    function renderForm() { \n        return (\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" size=\"lg\">\n                  \n                    {/* <hr /> */}\n                    <Form.Label>\n                        <h5> Email</h5>\n                    </Form.Label> \n                    <Form.Control\n                        autoFocus\n                        type=\"email\" \n                        value={fields.email}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\" size=\"lg\">\n                    <Form.Label>\n                        <h5> Password </h5>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={fields.password}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n                <Form.Label>\n                    <h5> Confirm Password </h5>\n                </Form.Label> \n                <Form.Control\n                    type=\"password\"\n                    onChange={handleFieldChange}\n                    value={fields.confirmPassword}\n                />\n            </Form.Group>\n            <LoaderButton\n                block\n                size=\"lg\"\n                type=\"submit\"\n                variant=\"success\"\n                isLoading={isLoading}\n                disabled={!validateForm()}\n            >\n                Signup\n            </LoaderButton>\n        </Form> \n        );\n    }\n\n    return (\n        <div className=\"Signup\">\n            {newUser === null ? renderForm() : renderConfirmationForm()}\n        </div>\n    );\n}","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ResetPassword.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ChangePassword.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Themes.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Dashboard.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/NewNote.js",["131","132","133","134","135","136","137","138","139","140"],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Notes.js",["141","142","143","144","145","146","147"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { s3Upload } from \"../libs/awsLib\"; \nimport LoaderButton from \"../components/LoaderButton\"; \nimport config from \"../config\"; \nimport \"./Notes.css\"; \n\nimport Form from \"react-bootstrap/Form\"; \nimport {  \n  dark, ocean, atelierCaveLight, atelierCaveDark, stackoverflowDark,\n  atomOneLight,brownPaper,github,shadesOfPurple,rainbow, googlecode,\n  monoBlue, nightOwl, grayscale,purebasic, monokaiSublime, \n  tomorrowNightBlue, tomorrowNightBright, tomorrowNightEighties,\n} from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nimport { Button } from \"react-bootstrap\"; \n\nimport { \n    Paper, \n    Grid, \n    Select, \n    InputLabel, \n    MenuItem, \n    FormControl, \n    TextField,\n    Divider\n   } from \"@material-ui/core\"; \n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FaceIcon from \"@material-ui/icons/Face\"; \nimport Filter1 from \"@material-ui/icons/Filter1\"; \nimport Filter2 from \"@material-ui/icons/Filter2\"; \n\nexport default function Notes() {\n  const file = useRef(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const [note, setNote] = useState(null);\n\n  const [content, setContent] = useState(\"\");\n  const [contentToRender, setContentToRender] = useState(\"\"); \n  const [programmingLanguage, setProgrammingLanguage] = useState(\"java\")\n\n  const [highlightedSnippetTheme, setHighlightedSnippetTheme] = useState(dark)\n  const [editorSnippetTheme, setEditorSnippetTheme] = useState(\"terminal\")\n  const [editorBackgroundColor, setEditorBackgroundColor] = useState(\"black\")\n  const [editorFontColor, setEditorFontColor] = useState(\"green\")\n  \n  const [isLoading, setIsLoading] = useState(false); \n  const [isDeleting, setIsDeleting] = useState(false); \n  \n  const [moniker, setMoniker] = useState(\"@\"); \n  const [tag1, setTag1] = useState(\"#\");\n  const [tag2, setTag2] = useState(\"#\"); \n \n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const { content, moniker, primaryTags, secondaryTags, attachment } = note;\n\n        console.log(note); \n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        handleMonikerChange(moniker);\n        handleTag1Update(primaryTags);\n        handleTag2Update(secondaryTags); \n\n        handleContentChange(content);  \n        setNote(note);\n      } catch (e) {\n        onError(e);\n      }\n    }\n    onLoad();\n  }, [id]);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n  \n  function formatFilename(str) {\n    return str.replace(/^\\w+-/, \"\");\n  }\n  \n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n  \n  function saveNote(note) {\n    return API.put(\"notes\", `/notes/${id}`, {\n      body: note\n    });\n  }\n\n  async function handleSubmit(event) {\n    let attachment;\n    event.preventDefault();\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${\n          config.MAX_ATTACHMENT_SIZE / 1000000\n        } MB.`\n      );\n      return;\n    }\n    setIsLoading(true);\n    \n    try {\n      if (file.current) {\n        attachment = await s3Upload(file.current);\n      }\n      await saveNote({\n        content,\n        moniker: moniker,\n        primaryTags: tag1, \n        secondaryTags: tag2, \n        attachment: attachment || note.attachment\n      });\n      setIsLoading(false); \n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n  \n  function deleteNote() {\n    return API.del(\"notes\", `/notes/${id}`);\n  }\n  \n  async function handleDelete(event) {\n    event.preventDefault();\n  \n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this note?\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    setIsDeleting(true);\n    try {\n      await deleteNote();\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsDeleting(false);\n    }\n  }\n\n  function handleLanguageSelectorChange(updatedLanguage) {\n    setProgrammingLanguage(updatedLanguage); \n  }\n\n  function LanguageSelector() {\n    return (\n      <div className = \"languageSelectorClass\"> \n        <FormControl style = {{ minWidth: \"330px\", margin:\"12.5px\" }}> \n          <InputLabel htmlFor=\"grouped-native-select\">Programming Language</InputLabel>\n\n          <Select \n            labelId=\"label\" \n            id=\"select\" \n            value={programmingLanguage} \n            onChange={(e) => \n              handleLanguageSelectorChange(e.target.value)\n            }\n          > \n            <MenuItem value=\"javascript\"> JavaScript </MenuItem>\n            <MenuItem value=\"html\"> HTML </MenuItem>\n            <MenuItem value=\"c++\"> C++ </MenuItem>\n            <MenuItem value=\"java\"> Java </MenuItem>\n\n          </Select>\n        </FormControl>\n      </div>\n    ); \n  }\n\n  function handleViewerThemeChange(updatedViewerTheme) {\n    setHighlightedSnippetTheme(updatedViewerTheme); \n  }\n\n  function ViewerThemeSelector() {\n    return (\n      <div className = \"viewerThemeSelectorClass\"> \n        <FormControl style = {{ minWidth: \"330px\", margin:\"12.5px\" }}> \n          <InputLabel htmlFor=\"grouped-native-select\">Viewer Theme</InputLabel>\n          \n          <Select \n            labelId=\"label\" \n            id=\"selectViewerTheme\"\n            value={highlightedSnippetTheme} \n            onChange={(e) => \n              handleViewerThemeChange(e.target.value)\n            }\n          > \n\n            <MenuItem value={shadesOfPurple}> Shades Of Purple </MenuItem>\n            <MenuItem value={dark}> Dark </MenuItem>\n            <MenuItem value={github}> GitHub </MenuItem>\n            <MenuItem value={ocean}> Ocean </MenuItem>\n            <MenuItem value={atomOneLight}> Atom 1 Light </MenuItem>\n            <MenuItem value={brownPaper}> Brown Paper </MenuItem>\n            <MenuItem value={rainbow}> Rainbow </MenuItem>\n            <MenuItem value={googlecode}> GoogleCode </MenuItem>\n            <MenuItem value={monoBlue}> MonoBlue </MenuItem>\n            <MenuItem value={nightOwl}> NightOwl </MenuItem>\n            <MenuItem value={grayscale}> Grayscale </MenuItem>\n            <MenuItem value={stackoverflowDark}> StackOverflow Dark </MenuItem>\n            <MenuItem value={monokaiSublime}> Monokai Sublime </MenuItem>\n            <MenuItem value={purebasic}> Pure Basic </MenuItem> \n            <MenuItem value={tomorrowNightBlue}> Tomorrow Night Blue </MenuItem> \n            <MenuItem value={tomorrowNightBright}> Tomorrow Night Bright </MenuItem> \n            <MenuItem value={tomorrowNightEighties}> Tomorrow Night Eighties </MenuItem> atelierCaveLight\n            <MenuItem value={atelierCaveLight}> Atelier Cave Light </MenuItem> \n            <MenuItem value={atelierCaveDark}> Atelier Cave Dark </MenuItem> \n          </Select>\n        </FormControl>\n      </div> \n    )\n  }\n\n  function handleEditorThemeChange(updatedEditorTheme) {\n    setEditorSnippetTheme(updatedEditorTheme); \n\n    if(updatedEditorTheme == \"terminal\") {\n        setEditorBackgroundColor(\"black\");\n        setEditorFontColor(\"green\"); \n    } else {\n        setEditorBackgroundColor(\"white\");\n        setEditorFontColor(\"black\"); \n    }\n  }\n\n  function EditorThemeSelector() {\n    return (\n      <div className = \"editorThemeSelectorClass\"> \n        <FormControl style = {{ minWidth: \"330px\", margin:\"12.5px\", \n                                backgroundColor: \"#ffffff\", \n                                borderWidth:\"5px\", borderColor:\"red\" \n                              }}> \n                              \n          <InputLabel htmlFor=\"grouped-native-select\">Editor Theme</InputLabel>\n          <Select labelId=\"label\" id=\"selectEditorTheme\"\n                  value={editorSnippetTheme} \n                  onChange={(e) => handleEditorThemeChange(e.target.value)}> \n\n            <MenuItem value=\"terminal\"> Terminal </MenuItem>\n            <MenuItem value=\"classic\"> Classic </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n\n  function ButtonGroup() {\n    return (\n      <div className=\"ButtonGroup\" style={{ width: \"90%\", margin: \"20px\"}}>\n        <LoaderButton block size=\"sm\" type=\"submit\" value=\"submit\" \n                      isLoading={isLoading} disabled={!validateForm()}\n                      style={{ backgroundColor:\"white\", color: \"black\", borderWidth: \"2.5px\", borderColor: \"#202020\" }}>\n          Save\n        </LoaderButton>\n        \n        <LoaderButton variant=\"dark\" block size=\"sm\" onClick={handleDelete} isLoading={isDeleting}>\n          Delete\n        </LoaderButton>\n      </div>\n    );\n  }\n\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  const classes = useStyles();\n  \n  function handleMonikerChange(updatedMoniker) {\n    if(updatedMoniker) {\n      if(updatedMoniker.length == 0) {\n        updatedMoniker = \"#\"; \n      } else if(updatedMoniker.substring(0,1) != \"@\") {\n        updatedMoniker = \"#\" + updatedMoniker;\n      }\n      setMoniker(updatedMoniker);\n    } else {\n      setMoniker(\"@\"); \n    }\n  }\n\n  function handleTag1Update(updatedTag1) {\n      if(updatedTag1) {\n        if(updatedTag1.length == 0) {\n          updatedTag1 = \"#\"; \n        } else if (updatedTag1.substring(0,1) != \"#\") {\n          updatedTag1 = \"#\" + updatedTag1; \n        }\n        setTag1(updatedTag1); \n      } else {\n        setTag1(\"#\"); \n      }\n      \n  }\n\n  function handleTag2Update(updatedTag2) {\n    if(updatedTag2) {\n      if(updatedTag2.length == 0) {\n        updatedTag2 = \"#\";\n      } else if(updatedTag2.substring(0,1) != \"#\") {\n          updatedTag2 = \"#\" + updatedTag2; \n      }\n      setTag2(updatedTag2); \n    } else {\n      setTag2(\"#\"); \n    }\n  }\n\n  \n\n  function handleContentChange(updatedContent) {\n    const lines = (updatedContent.match(/\\n/g) || '').length + 1\n\n    if(lines <= 23) {\n      //set a limit to the number of chars if typing on the 30th line \n      //if copying and pasting from 28 lines to 35, clip the first two lines \n      //and only append those \n      \n      setContent(updatedContent);\n\n      let snippetFillerForSyntaxHighlighter = \"\"; \n      let emptyLine = \"                              \\n\"; \n      \n      let i; \n      for(i = 0; i < 31 - lines; i++) {\n        snippetFillerForSyntaxHighlighter += emptyLine; \n      } \n\n      setContentToRender(updatedContent + snippetFillerForSyntaxHighlighter); \n    }\n  }\n\n\n  return (\n  <div className=\"mainContainer\" style={{ backgroundColor: '#FFFFFFF'}}> \n    { note  && (\n    \n     <Form onSubmit={handleSubmit}>\n        <Grid container spacing={1} style = {{ flexGrow: 1, backgroundColor: '#FFFFFF' }}> \n          <Grid item lg={6}> \n          \n            <Paper rounded={true} elevation={20} style={{ height: '59.5vh', width: '100%' }}> \n              \n              <Form.Group controlId=\"content\">\n                <Form.Control as=\"textarea\" value={content} custom=\"true\" \n                              onChange={(e) => handleContentChange(e.target.value)} \n                              style={{ minHeight:'59.5vh', maxHeight:'59.5vh',  width: '100%', resize: 'none', padding: '5px', \n                                        backgroundColor: editorBackgroundColor, color: editorFontColor, fontSize:'13px',  borderWidth: '1px' }}              \n                />\n              </Form.Group>   \n            </Paper>\n          \n          </Grid>\n\n          <Grid item lg={6} style = {{ flexGrow: 1, backgroundColor: '#FFFFFF' }}> \n            <Paper rounded={true} elevation={20} style={{ height: '59.5vh', width: '100%', padding: '5px' }}>\n              <SyntaxHighlighter \n                  language={programmingLanguage} \n                  style={ highlightedSnippetTheme } \n                  showLineNumbers \n                  wrapLongLines={false} \n              > \n                { contentToRender }\n              </SyntaxHighlighter>   \n            </Paper>\n          </Grid>      \n           \n          <Grid item lg={4} style = {{ backgroundColor: '#FFFFFF' }}>\n            <Paper style={{ minHeight: \"25vh\", maxHeight: \"25vh\", backgroundColor: \"#ffffff\"  }}>\n             \n            <div className={classes.root}>\n  \n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem autofocus>\n                    <ListItemIcon>\n                        <FaceIcon />\n                    </ListItemIcon>\n                  \n\n                    <ListItemText primary={ \n                        <TextField id=\"filled-basic\" variant=\"filled\" \n                                placeholder=\"@\" size =\"large\"\n                                value={ moniker } disabled = \"true\"\n                        /> } \n                    />\n                </ListItem>\n              </List>\n\n              <Divider />\n\n              <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                <ListItem autofocus>\n                    <ListItemIcon>\n                        <Filter1 />\n                    </ListItemIcon> \n\n                    <ListItemText primary= {\n                        <TextField id=\"filled-basic\" variant=\"outlined\" \n                                    placeholder=\"#\" size =\"medium\"\n                                    value={ tag1 } onChange={(e) => handleTag1Update(e.target.value)}\n                        /> }\n                    />\n                </ListItem>\n\n                <ListItem href=\"#simple-list\">\n                    <ListItemIcon>\n                        <Filter2 />\n                    </ListItemIcon>\n\n                    <ListItemText secondary= {\n                        <TextField id=\"filled-basic\" variant=\"outlined\" \n                                    placeholder=\"#\" size =\"medium\"\n                                    value={ tag2 } onChange={(e) => handleTag2Update(e.target.value)}                  /> }\n                  />\n                </ListItem>\n              </List>\n            </div>\n            </Paper>\n          </Grid>        \n        \n          <Grid item lg={4} style = {{ backgroundColor: '#ffffff' }}>\n            <Paper style={{ minHeight: \"25vh\", maxHeight: \"25vh\", backgroundColor: \"#ffffff\" }}>\n              <LanguageSelector />\n\n              <ViewerThemeSelector />\n            \n              <EditorThemeSelector /> \n            </Paper>\n          </Grid>       \n          \n        \n\n          <Grid item lg={4}  style = {{  backgroundColor: '#FFFFFF' }}>\n            <Paper style={{ minHeight: \"25vh\", maxHeight: \"25vh\", backgroundColor: \"#FFFFFF\" }}>\n              <FormControl style={{ display: \"flex\", flexDirection:\"row\", width: \"100%\" }}>      \n                <Button className=\"fileAttach1\" variant=\"light\" block size=\"sm\" > \n                    <input type = \"file\"  onChange={handleFileChange} /> \n                </Button>\n\n                <Button className=\"fileAttach2\" variant=\"link\" block size=\"sm\" style={{ marginBottom: \"20px\" }}> \n                  { note.attachment && (\n                      <p> <a target=\"_blank\" rel=\"noopener noreferrer\" href={note.attachmentURL}>\n                      {formatFilename(note.attachment)}\n                      </a> </p> \n                  )}\n                </Button> \n\n              </FormControl>\n              <ButtonGroup style={{ width:\"80%\" }} /> \n                \n            </Paper>\n          </Grid>       \n             \n        </Grid>\n      </Form> \n     \n    )}\n\n    </div>\n  );\n}","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/Settings.js",["148","149","150","151","152","153","154","155"],"import React, { useState, useEffect } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\n\nimport VirtualizedHighlighter from './VirtualizedHighlighter'; \n\nexport default function Settings() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  // function billUser(details) {\n  //   return API.post(\"notes\", \"/billing\", {\n  //     body: details\n  //   });\n  // }\n\n\n  return (\n    <div className=\"Settings\" style={{ \n            position: \"absolute\", \n            top: '30%', left: '30%', width: '40%', height: '40%',\n      }}>\n\n        {/* <h2 style={{ width: '100%' }}> Name, Here </h2>    */}\n        <div style={{ \n            display: 'flex', flexDirection: 'column', \n            justifyContent: 'flex-end', height: '100%'\n          }}\n        >\n\n          <LinkContainer to=\"/settings/email\"  style={{ margin: '5px' }} >\n            <LoaderButton variant=\"info\" bsSize=\"small\">\n              <h5> Update Email </h5> \n            </LoaderButton>\n          </LinkContainer>\n          \n          <LinkContainer to=\"/settings/password\" style={{ margin: '5px' }}>\n            <LoaderButton variant=\"info\" bsSize=\"small\">\n              <h5> Update Password </h5> \n            </LoaderButton>\n          </LinkContainer>\n\n      \n        </div>\n    </div>\n  );\n}\n","/Users/sanshitsagar/portfolio/fragments-ui/src/containers/ChangeEmail.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/NotFound.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/LoaderButton.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/libs/hooksLib.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/libs/awsLib.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/components/FacebookButton.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/containers/VirtualizedHighlighter.js",[],"/Users/sanshitsagar/portfolio/fragments-ui/src/styles/hljs.js",["156"],"export default [\n    'a11y-dark',\n    'a11y-light',\n    'agate',\n    'an-old-hope',\n    'androidstudio',\n    'arduino-light',\n    'arta',\n    'ascetic',\n    'atelier-cave-dark',\n    'atelier-cave-light',\n    'atelier-dune-dark',\n    'atelier-dune-light',\n    'atelier-estuary-dark',\n    'atelier-estuary-light',\n    'atelier-forest-dark',\n    'atelier-forest-light',\n    'atelier-heath-dark',\n    'atelier-heath-light',\n    'atelier-lakeside-dark',\n    'atelier-lakeside-light',\n    'atelier-plateau-dark',\n    'atelier-plateau-light',\n    'atelier-savanna-dark',\n    'atelier-savanna-light',\n    'atelier-seaside-dark',\n    'atelier-seaside-light',\n    'atelier-sulphurpool-dark',\n    'atelier-sulphurpool-light',\n    'atom-one-dark',\n    'atom-one-dark-reasonable',\n    'atom-one-light',\n    'brown-paper',\n    'codepen-embed',\n    'color-brewer',\n    'darcula',\n    'dark',\n    'default-style',\n    'docco',\n    'dracula',\n    'far',\n    'foundation',\n    'github',\n    'github-gist',\n    'gml',\n    'googlecode',\n    'gradient-dark',\n    'gradient-light',\n    'grayscale',\n    'gruvbox-dark',\n    'gruvbox-light',\n    'hopscotch',\n    'hybrid',\n    'idea',\n    'ir-black',\n    'isbl-editor-dark',\n    'isbl-editor-light',\n    'kimbie.dark',\n    'kimbie.light',\n    'lightfair',\n    'lioshi',\n    'magula',\n    'mono-blue',\n    'monokai',\n    'monokai-sublime',\n    'night-owl',\n    'nnfx',\n    'nnfx-dark',\n    'nord',\n    'obsidian',\n    'ocean',\n    'paraiso-dark',\n    'paraiso-light',\n    'pojoaque',\n    'purebasic',\n    'qtcreator_dark',\n    'qtcreator_light',\n    'railscasts',\n    'rainbow',\n    'routeros',\n    'school-book',\n    'shades-of-purple',\n    'solarized-dark',\n    'solarized-light',\n    'srcery',\n    'stackoverflow-dark',\n    'stackoverflow-light',\n    'sunburst',\n    'tomorrow',\n    'tomorrow-night',\n    'tomorrow-night-blue',\n    'tomorrow-night-bright',\n    'tomorrow-night-eighties',\n    'vs',\n    'vs2015',\n    'xcode',\n    'xt256',\n    'zenburn'\n  ];",["157","158"],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":14},{"ruleId":"163","severity":1,"message":"167","line":31,"column":7,"nodeType":"165","messageId":"166","endLine":31,"endColumn":14},{"ruleId":"163","severity":1,"message":"168","line":143,"column":11,"nodeType":"165","messageId":"166","endLine":143,"endColumn":32},{"ruleId":"163","severity":1,"message":"169","line":147,"column":11,"nodeType":"165","messageId":"166","endLine":147,"endColumn":29},{"ruleId":"163","severity":1,"message":"170","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":22},{"ruleId":"163","severity":1,"message":"171","line":29,"column":14,"nodeType":"165","messageId":"166","endLine":29,"endColumn":27},{"ruleId":"163","severity":1,"message":"170","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":22},{"ruleId":"163","severity":1,"message":"172","line":19,"column":8,"nodeType":"165","messageId":"166","endLine":19,"endColumn":15},{"ruleId":"163","severity":1,"message":"173","line":26,"column":5,"nodeType":"165","messageId":"166","endLine":26,"endColumn":10},{"ruleId":"163","severity":1,"message":"174","line":48,"column":8,"nodeType":"165","messageId":"166","endLine":48,"endColumn":26},{"ruleId":"163","severity":1,"message":"175","line":83,"column":11,"nodeType":"165","messageId":"166","endLine":83,"endColumn":18},{"ruleId":"163","severity":1,"message":"176","line":98,"column":14,"nodeType":"165","messageId":"166","endLine":98,"endColumn":28},{"ruleId":"177","severity":1,"message":"178","line":103,"column":42,"nodeType":"179","messageId":"180","endLine":103,"endColumn":44},{"ruleId":"177","severity":1,"message":"178","line":110,"column":50,"nodeType":"179","messageId":"180","endLine":110,"endColumn":52},{"ruleId":"177","severity":1,"message":"178","line":117,"column":52,"nodeType":"179","messageId":"180","endLine":117,"endColumn":54},{"ruleId":"163","severity":1,"message":"181","line":186,"column":14,"nodeType":"165","messageId":"166","endLine":186,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":501,"column":33,"nodeType":"184","endLine":501,"endColumn":61},{"ruleId":"177","severity":1,"message":"185","line":242,"column":27,"nodeType":"179","messageId":"180","endLine":242,"endColumn":29},{"ruleId":"177","severity":1,"message":"185","line":300,"column":32,"nodeType":"179","messageId":"180","endLine":300,"endColumn":34},{"ruleId":"177","severity":1,"message":"178","line":302,"column":47,"nodeType":"179","messageId":"180","endLine":302,"endColumn":49},{"ruleId":"177","severity":1,"message":"185","line":313,"column":31,"nodeType":"179","messageId":"180","endLine":313,"endColumn":33},{"ruleId":"177","severity":1,"message":"178","line":315,"column":47,"nodeType":"179","messageId":"180","endLine":315,"endColumn":49},{"ruleId":"177","severity":1,"message":"185","line":327,"column":29,"nodeType":"179","messageId":"180","endLine":327,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":329,"column":44,"nodeType":"179","messageId":"180","endLine":329,"endColumn":46},{"ruleId":"163","severity":1,"message":"186","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"187","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":13},{"ruleId":"163","severity":1,"message":"188","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":14},{"ruleId":"163","severity":1,"message":"189","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":30},{"ruleId":"163","severity":1,"message":"190","line":12,"column":9,"nodeType":"165","messageId":"166","endLine":12,"endColumn":16},{"ruleId":"163","severity":1,"message":"191","line":13,"column":10,"nodeType":"165","messageId":"166","endLine":13,"endColumn":19},{"ruleId":"163","severity":1,"message":"192","line":13,"column":21,"nodeType":"165","messageId":"166","endLine":13,"endColumn":33},{"ruleId":"193","severity":1,"message":"194","line":1,"column":1,"nodeType":"195","endLine":99,"endColumn":5},{"ruleId":"159","replacedBy":"196"},{"ruleId":"161","replacedBy":"197"},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'actions' is assigned a value but never used.","'handleDirectionChange' is assigned a value but never used.","'handleHiddenChange' is assigned a value but never used.","'FacebookButton' is defined but never used.","'handleFbLogin' is defined but never used.","'Divider' is defined but never used.","'Paper' is defined but never used.","'LoyaltyTwoToneIcon' is defined but never used.","'classes' is assigned a value but never used.","'formatFilename' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'AttachmentCard' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'API' is defined but never used.","'onError' is defined but never used.","'VirtualizedHighlighter' is defined but never used.","'history' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["198"],["199"],"no-global-assign","no-unsafe-negation"]